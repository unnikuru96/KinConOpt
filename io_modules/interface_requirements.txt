This document outlines the minimum interface requirements for any new temperature or flow control modules. 

class Instrument():
	CONSTANTS
	name --> a String that represents the name of the device
	
	METHODS
	init(config_file.json) --> No return
		Initializes communication with device, checks for valid communications. 
		Throws:
			- IOError if communication fails.
			- FileNotFoundError if file is unopenable.
		Input: config_file.json, which is a string for a JSON file

	write_sp({"sub_device_name_1 : new_sp_val_1, sub_device_name_2  : new_sp_val_2", etc.}) --> Bool
		Writes a setpoint to the device.
		Returns True if setpoint was set successfully [IO module should verify setpoint took]
		Input: new_sp, which is a float

	read_sp() --> {"sub_device_name_1 : pv_val_1, sub_device_name_2  : pv_val_2", etc.}
		Reads the current SP from the device

	read_pv() --> {"sub_device_name_1 : pv_val_1, sub_device_name_2  : pv_val_2", etc.}
		Reads the current PV from the device

	get_sub_dev_names() --> Dictionary of form {"sub_device_name_1" : "device_name", "sub_device_name_2" : "device_name" } etc.


